<%
require 'cgi'
require 'uri'

begin
  uri = URI.parse(ENV["DATABASE_URL"])
rescue URI::InvalidURIError
  raise "Invalid DATABASE_URL"
end

raise "No RACK_ENV or RAILS_ENV found" unless ENV["RAILS_ENV"] || ENV["RACK_ENV"]

def attribute(name, value, force_string = false)
  if value
    value_string =
      if force_string
        '"' + value + '"'
      else
        value
      end
    "#{name}: #{value_string}"
  else
    ""
  end
end

database = (uri.path || "").split("/")[1]

username = uri.user
password = uri.password

host = uri.host
port = uri.port

params = CGI.parse(uri.query || "")

params["encoding"] = ["utf8"] unless params["encoding"].present?

if params["pool"].empty?
  concurrency = (ENV['WEB_CONCURRENCY'] || 3).to_i
  concurrency += (ENV['WORKS_CONCURRENCY'] || 5).to_i
  concurrency *= 2

  params["pool"] = [concurrency]
end

adapter = case uri.scheme
          when "postgres" then "postgresql"
          when "mysql"    then "mysql2"
          else uri.scheme
          end

%>


<%= ENV["RAILS_ENV"] || ENV["RACK_ENV"] %>:
  <%= attribute "adapter",  "mysql2" %>
  <%= attribute "database", database %>
  <%= attribute "username", username %>
  <%= attribute "password", password, true %>
  <%= attribute "host",     host %>
  <%= attribute "port",     port %>

<% params.each do |key, value| %>
  <%= key %>: <%= value.first %>
<% end %>
